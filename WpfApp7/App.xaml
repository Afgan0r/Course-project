<Application x:Class="WpfApp7.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfApp7"
             StartupUri="MainWindow.xaml">
    
    <Application.Resources>

        <Style x:Key="LabelFontStyle" TargetType="Label">
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="30"/>
        </Style>
        <Style x:Key="ButtonFontStyle" TargetType="Button">
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="25"/>
        </Style>
        <Style x:Key="ComboBoxFontStyle" TargetType="ComboBox">
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="25"/>
        </Style>

        <Style x:Key="TextBoxFontStyle" TargetType="TextBox">
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="25"/>
        </Style>
        
        <Style x:Key="StackPanelStyle" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Orientation" Value="Horizontal"/>
        </Style>

        <Style x:Key="LogInStyle" TargetType="TextBox">
            <!--VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="150" TextAlignment="Justify"  Height="20"-->
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="TextAlignment" Value="Justify"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="PasswordFieldStyle" TargetType="PasswordBox">
            <!--VerticalAlignment="Stretch" HorizontalAlignment="Center" Width="150" Height="20"-->
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="ExitButtonStyle" TargetType="Button">
            <!--Content="Выход" HorizontalAlignment="Right" VerticalAlignment="Top" Width="75" Grid.Row="0" Grid.Column="1" Click="LogOut_Click" Margin="0,15,15,0"-->
            <Setter Property="Content" Value="Выход"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="75"/>
            <Setter Property="Grid.Row" Value="0"/>
            <Setter Property="Grid.Column" Value="1"/>
            <Setter Property="Margin" Value="0,15,15,0"/>
            <Setter Property="FontFamily" Value="PF BeauSans Pro Light"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="20"/>
        </Style>

        <ControlTemplate x:Key="ButtonRoundAngle" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>

</Application>
